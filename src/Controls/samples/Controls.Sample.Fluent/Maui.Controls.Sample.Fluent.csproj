<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>Maui.Controls.Sample.Fluent</RootNamespace>
    <AssemblyName>Maui.Controls.Sample.Fluent</AssemblyName>
		<UseMaui>false</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>false</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>.NET MAUI Code Only Sample</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.microsoft.maui.controls.codeonlysample</ApplicationId>
		<ApplicationIdGuid>d102e8e3-ec5a-4f47-8f81-57afe93e47a6</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
	  <CreatePackage>false</CreatePackage>
	</PropertyGroup>
	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="$(MicrosoftExtensionsPackageVersion)" />
	</ItemGroup>

  <ItemGroup Condition=" '$(UseMaui)' != 'true' ">
    <ProjectReference Include="..\..\..\BlazorWebView\src\Maui\Microsoft.AspNetCore.Components.WebView.Maui.csproj" />
    <ProjectReference Include="..\..\..\Essentials\src\Essentials.csproj" />
    <ProjectReference Include="..\..\..\Controls\src\Core\Controls.Core.csproj" />
    <ProjectReference Include="..\..\..\Controls\src\Xaml\Controls.Xaml.csproj" />
    <ProjectReference Include="..\..\..\Core\src\Core.csproj" />
    <ProjectReference Include="..\..\..\Compatibility\Core\src\Compatibility.csproj" />
    <ProjectReference Include="..\..\..\Controls\Foldable\src\Controls.Foldable.csproj" />
    <ProjectReference Include="..\..\..\Controls\Maps\src\Controls.Maps.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Fluent.Generator\Controls.Fluent.Generator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />
  </ItemGroup>
	<PropertyGroup>
    <!--<RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>-->
		<!--<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>-->
		<!--<CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>-->
  </PropertyGroup>
	<ItemGroup>
		<!--<Compile Remove="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />-->
	  <!--<None Include="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />-->
  </ItemGroup>
</Project>

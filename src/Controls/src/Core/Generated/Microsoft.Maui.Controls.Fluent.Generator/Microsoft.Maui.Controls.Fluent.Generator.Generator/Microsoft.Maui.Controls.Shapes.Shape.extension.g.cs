//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls.Shapes
{
	using Microsoft.Maui.Controls.Fluent;

    public static class ShapeGeneratedExtension
    {
        public static T Fill<T>(this T obj,
            Microsoft.Maui.Controls.Brush fill)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.Fill = fill;
            return obj;
        }
        
        public static T Fill<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Brush>, ValueBuilder<Microsoft.Maui.Controls.Brush>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Brush>());
            if (builder.ValueIsSet()) obj.Fill = builder.GetValue();
            return obj;
        }
        
        public static T Fill<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Brush>, LazyValueBuilder<Microsoft.Maui.Controls.Brush>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Brush>());
            if (builder.ValueIsSet()) obj.Fill = builder.GetValue();
            return obj;
        }
        
        public static T Fill<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Brush>, BindingBuilder<Microsoft.Maui.Controls.Brush>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Brush>(obj, Microsoft.Maui.Controls.Shapes.Shape.FillProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            Microsoft.Maui.Controls.Brush stroke)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.Stroke = stroke;
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Brush>, ValueBuilder<Microsoft.Maui.Controls.Brush>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Brush>());
            if (builder.ValueIsSet()) obj.Stroke = builder.GetValue();
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Brush>, LazyValueBuilder<Microsoft.Maui.Controls.Brush>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Brush>());
            if (builder.ValueIsSet()) obj.Stroke = builder.GetValue();
            return obj;
        }
        
        public static T Stroke<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Brush>, BindingBuilder<Microsoft.Maui.Controls.Brush>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Brush>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            double strokeThickness)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeThickness = strokeThickness;
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeThickness = builder.GetValue();
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeThickness = builder.GetValue();
            return obj;
        }
        
        public static T StrokeThickness<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeThicknessProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            Microsoft.Maui.Controls.DoubleCollection strokeDashArray)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeDashArray = strokeDashArray;
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.DoubleCollection>, ValueBuilder<Microsoft.Maui.Controls.DoubleCollection>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.DoubleCollection>());
            if (builder.ValueIsSet()) obj.StrokeDashArray = builder.GetValue();
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.DoubleCollection>, LazyValueBuilder<Microsoft.Maui.Controls.DoubleCollection>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.DoubleCollection>());
            if (builder.ValueIsSet()) obj.StrokeDashArray = builder.GetValue();
            return obj;
        }
        
        public static T StrokeDashArray<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.DoubleCollection>, BindingBuilder<Microsoft.Maui.Controls.DoubleCollection>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.DoubleCollection>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArrayProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            double strokeDashOffset)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeDashOffset = strokeDashOffset;
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeDashOffset = builder.GetValue();
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeDashOffset = builder.GetValue();
            return obj;
        }
        
        public static T StrokeDashOffset<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffsetProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineCap strokeLineCap)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeLineCap = strokeLineCap;
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>, ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>());
            if (builder.ValueIsSet()) obj.StrokeLineCap = builder.GetValue();
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>, LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>());
            if (builder.ValueIsSet()) obj.StrokeLineCap = builder.GetValue();
            return obj;
        }
        
        public static T StrokeLineCap<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>, BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineCap>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCapProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            Microsoft.Maui.Controls.Shapes.PenLineJoin strokeLineJoin)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeLineJoin = strokeLineJoin;
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>, ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>());
            if (builder.ValueIsSet()) obj.StrokeLineJoin = builder.GetValue();
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>, LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>());
            if (builder.ValueIsSet()) obj.StrokeLineJoin = builder.GetValue();
            return obj;
        }
        
        public static T StrokeLineJoin<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>, BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Shapes.PenLineJoin>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoinProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            double strokeMiterLimit)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.StrokeMiterLimit = strokeMiterLimit;
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeMiterLimit = builder.GetValue();
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.StrokeMiterLimit = builder.GetValue();
            return obj;
        }
        
        public static T StrokeMiterLimit<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimitProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            Microsoft.Maui.Controls.Stretch aspect)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            obj.Aspect = aspect;
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Stretch>, ValueBuilder<Microsoft.Maui.Controls.Stretch>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Stretch>());
            if (builder.ValueIsSet()) obj.Aspect = builder.GetValue();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Stretch>, LazyValueBuilder<Microsoft.Maui.Controls.Stretch>> buidValue)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Stretch>());
            if (builder.ValueIsSet()) obj.Aspect = builder.GetValue();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.Stretch>, BindingBuilder<Microsoft.Maui.Controls.Stretch>> buidBinding)
            where T : Microsoft.Maui.Controls.Shapes.Shape
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.Stretch>(obj, Microsoft.Maui.Controls.Shapes.Shape.AspectProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

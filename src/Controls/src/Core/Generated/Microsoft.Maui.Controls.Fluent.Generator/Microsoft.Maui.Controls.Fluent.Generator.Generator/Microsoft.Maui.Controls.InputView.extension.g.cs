//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class InputViewGeneratedExtension
    {
        public static T MaxLength<T>(this T obj,
            int maxLength)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.MaxLength = maxLength;
            return obj;
        }
        
        public static T MaxLength<T>(this T obj,
            System.Func<ValueBuilder<int>, ValueBuilder<int>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<int>());
            if (builder.ValueIsSet()) obj.MaxLength = builder.GetValue();
            return obj;
        }
        
        public static T MaxLength<T>(this T obj,
            System.Func<LazyValueBuilder<int>, LazyValueBuilder<int>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<int>());
            if (builder.ValueIsSet()) obj.MaxLength = builder.GetValue();
            return obj;
        }
        
        public static T MaxLength<T>(this T obj,
            System.Func<BindingBuilder<int>, BindingBuilder<int>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<int>(obj, Microsoft.Maui.Controls.InputView.MaxLengthProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            string text)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.Text = text;
            return obj;
        }
        
        public static T Text<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Text = builder.GetValue();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Text = builder.GetValue();
            return obj;
        }
        
        public static T Text<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.InputView.TextProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            Microsoft.Maui.Keyboard keyboard)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.Keyboard = keyboard;
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Keyboard>, ValueBuilder<Microsoft.Maui.Keyboard>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Keyboard>());
            if (builder.ValueIsSet()) obj.Keyboard = builder.GetValue();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Keyboard>, LazyValueBuilder<Microsoft.Maui.Keyboard>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Keyboard>());
            if (builder.ValueIsSet()) obj.Keyboard = builder.GetValue();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Keyboard>, BindingBuilder<Microsoft.Maui.Keyboard>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Keyboard>(obj, Microsoft.Maui.Controls.InputView.KeyboardProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsSpellCheckEnabled<T>(this T obj,
            bool isSpellCheckEnabled)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.IsSpellCheckEnabled = isSpellCheckEnabled;
            return obj;
        }
        
        public static T IsSpellCheckEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsSpellCheckEnabled = builder.GetValue();
            return obj;
        }
        
        public static T IsSpellCheckEnabled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsSpellCheckEnabled = builder.GetValue();
            return obj;
        }
        
        public static T IsSpellCheckEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.InputView.IsSpellCheckEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsReadOnly<T>(this T obj,
            bool isReadOnly)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.IsReadOnly = isReadOnly;
            return obj;
        }
        
        public static T IsReadOnly<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsReadOnly = builder.GetValue();
            return obj;
        }
        
        public static T IsReadOnly<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsReadOnly = builder.GetValue();
            return obj;
        }
        
        public static T IsReadOnly<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.InputView.IsReadOnlyProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            string placeholder)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.Placeholder = placeholder;
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Placeholder = builder.GetValue();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Placeholder = builder.GetValue();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.InputView.PlaceholderProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color placeholderColor)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.PlaceholderColor = placeholderColor;
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.PlaceholderColor = builder.GetValue();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.PlaceholderColor = builder.GetValue();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.InputView.PlaceholderColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color textColor)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.TextColor = textColor;
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.InputView.TextColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            double characterSpacing)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.CharacterSpacing = characterSpacing;
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.InputView.CharacterSpacingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            Microsoft.Maui.TextTransform textTransform)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.TextTransform = textTransform;
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextTransform>, ValueBuilder<Microsoft.Maui.TextTransform>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextTransform>());
            if (builder.ValueIsSet()) obj.TextTransform = builder.GetValue();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.TextTransform>, LazyValueBuilder<Microsoft.Maui.TextTransform>> buidValue)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.TextTransform>());
            if (builder.ValueIsSet()) obj.TextTransform = builder.GetValue();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextTransform>, BindingBuilder<Microsoft.Maui.TextTransform>> buidBinding)
            where T : Microsoft.Maui.Controls.InputView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextTransform>(obj, Microsoft.Maui.Controls.InputView.TextTransformProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnTextChanged<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.TextChangedEventArgs> handler)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.TextChanged += handler;
            return obj;
        }
        
        public static T OnTextChanged<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.InputView
        {
            obj.TextChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

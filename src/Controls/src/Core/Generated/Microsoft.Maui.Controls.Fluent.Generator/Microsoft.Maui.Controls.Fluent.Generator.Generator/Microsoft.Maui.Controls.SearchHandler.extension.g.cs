//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class SearchHandlerGeneratedExtension
    {
        public static T Keyboard<T>(this T obj,
            Microsoft.Maui.Keyboard keyboard)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Keyboard = keyboard;
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Keyboard>, ValueBuilder<Microsoft.Maui.Keyboard>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Keyboard>());
            if (builder.ValueIsSet()) obj.Keyboard = builder.GetValue();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Keyboard>, LazyValueBuilder<Microsoft.Maui.Keyboard>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Keyboard>());
            if (builder.ValueIsSet()) obj.Keyboard = builder.GetValue();
            return obj;
        }
        
        public static T Keyboard<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Keyboard>, BindingBuilder<Microsoft.Maui.Keyboard>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Keyboard>(obj, Microsoft.Maui.Controls.SearchHandler.KeyboardProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment horizontalTextAlignment)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.HorizontalTextAlignment = horizontalTextAlignment;
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextAlignment>, ValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.HorizontalTextAlignment = builder.GetValue();
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.TextAlignment>, LazyValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.HorizontalTextAlignment = builder.GetValue();
            return obj;
        }
        
        public static T HorizontalTextAlignment<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextAlignment>, BindingBuilder<Microsoft.Maui.TextAlignment>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextAlignment>(obj, Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            Microsoft.Maui.TextAlignment verticalTextAlignment)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.VerticalTextAlignment = verticalTextAlignment;
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextAlignment>, ValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.VerticalTextAlignment = builder.GetValue();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.TextAlignment>, LazyValueBuilder<Microsoft.Maui.TextAlignment>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.TextAlignment>());
            if (builder.ValueIsSet()) obj.VerticalTextAlignment = builder.GetValue();
            return obj;
        }
        
        public static T VerticalTextAlignment<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextAlignment>, BindingBuilder<Microsoft.Maui.TextAlignment>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextAlignment>(obj, Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color textColor)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.TextColor = textColor;
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.SearchHandler.TextColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            Microsoft.Maui.TextTransform textTransform)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.TextTransform = textTransform;
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.TextTransform>, ValueBuilder<Microsoft.Maui.TextTransform>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.TextTransform>());
            if (builder.ValueIsSet()) obj.TextTransform = builder.GetValue();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.TextTransform>, LazyValueBuilder<Microsoft.Maui.TextTransform>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.TextTransform>());
            if (builder.ValueIsSet()) obj.TextTransform = builder.GetValue();
            return obj;
        }
        
        public static T TextTransform<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.TextTransform>, BindingBuilder<Microsoft.Maui.TextTransform>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.TextTransform>(obj, Microsoft.Maui.Controls.SearchHandler.TextTransformProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CancelButtonColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color cancelButtonColor)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.CancelButtonColor = cancelButtonColor;
            return obj;
        }
        
        public static T CancelButtonColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.CancelButtonColor = builder.GetValue();
            return obj;
        }
        
        public static T CancelButtonColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.CancelButtonColor = builder.GetValue();
            return obj;
        }
        
        public static T CancelButtonColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            Microsoft.Maui.Controls.FontAttributes fontAttributes)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FontAttributes = fontAttributes;
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.FontAttributes>, ValueBuilder<Microsoft.Maui.Controls.FontAttributes>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.FontAttributes>());
            if (builder.ValueIsSet()) obj.FontAttributes = builder.GetValue();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>, LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>());
            if (builder.ValueIsSet()) obj.FontAttributes = builder.GetValue();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.FontAttributes>, BindingBuilder<Microsoft.Maui.Controls.FontAttributes>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.FontAttributes>(obj, Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            string fontFamily)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FontFamily = fontFamily;
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.FontFamily = builder.GetValue();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.FontFamily = builder.GetValue();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            double characterSpacing)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.CharacterSpacing = characterSpacing;
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            double fontSize)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FontSize = fontSize;
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.FontSize = builder.GetValue();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.FontSize = builder.GetValue();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.SearchHandler.FontSizeProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FontAutoScalingEnabled = fontAutoScalingEnabled;
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.FontAutoScalingEnabled = builder.GetValue();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.FontAutoScalingEnabled = builder.GetValue();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color placeholderColor)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.PlaceholderColor = placeholderColor;
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.PlaceholderColor = builder.GetValue();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.PlaceholderColor = builder.GetValue();
            return obj;
        }
        
        public static T PlaceholderColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            string placeholder)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Placeholder = placeholder;
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Placeholder = builder.GetValue();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Placeholder = builder.GetValue();
            return obj;
        }
        
        public static T Placeholder<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T BackgroundColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color backgroundColor)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.BackgroundColor = backgroundColor;
            return obj;
        }
        
        public static T BackgroundColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.BackgroundColor = builder.GetValue();
            return obj;
        }
        
        public static T BackgroundColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.BackgroundColor = builder.GetValue();
            return obj;
        }
        
        public static T BackgroundColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T AutomationId<T>(this T obj,
            string automationId)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.AutomationId = automationId;
            return obj;
        }
        
        public static T AutomationId<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.AutomationId = builder.GetValue();
            return obj;
        }
        
        public static T AutomationId<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.AutomationId = builder.GetValue();
            return obj;
        }
        
        public static T AutomationId<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearIcon<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource clearIcon)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearIcon = clearIcon;
            return obj;
        }
        
        public static T ClearIcon<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ImageSource>, ValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.ClearIcon = builder.GetValue();
            return obj;
        }
        
        public static T ClearIcon<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>, LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.ClearIcon = builder.GetValue();
            return obj;
        }
        
        public static T ClearIcon<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ImageSource>, BindingBuilder<Microsoft.Maui.Controls.ImageSource>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.ImageSource>(obj, Microsoft.Maui.Controls.SearchHandler.ClearIconProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearIconHelpText<T>(this T obj,
            string clearIconHelpText)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearIconHelpText = clearIconHelpText;
            return obj;
        }
        
        public static T ClearIconHelpText<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearIconHelpText = builder.GetValue();
            return obj;
        }
        
        public static T ClearIconHelpText<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearIconHelpText = builder.GetValue();
            return obj;
        }
        
        public static T ClearIconHelpText<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearIconName<T>(this T obj,
            string clearIconName)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearIconName = clearIconName;
            return obj;
        }
        
        public static T ClearIconName<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearIconName = builder.GetValue();
            return obj;
        }
        
        public static T ClearIconName<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearIconName = builder.GetValue();
            return obj;
        }
        
        public static T ClearIconName<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderCommand<T>(this T obj,
            System.Windows.Input.ICommand clearPlaceholderCommand)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderCommand = clearPlaceholderCommand;
            return obj;
        }
        
        public static T ClearPlaceholderCommand<T>(this T obj,
            System.Func<ValueBuilder<System.Windows.Input.ICommand>, ValueBuilder<System.Windows.Input.ICommand>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderCommand = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderCommand<T>(this T obj,
            System.Func<LazyValueBuilder<System.Windows.Input.ICommand>, LazyValueBuilder<System.Windows.Input.ICommand>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderCommand = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderCommand<T>(this T obj,
            System.Func<BindingBuilder<System.Windows.Input.ICommand>, BindingBuilder<System.Windows.Input.ICommand>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<System.Windows.Input.ICommand>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderCommandParameter<T>(this T obj,
            object clearPlaceholderCommandParameter)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderCommandParameter = clearPlaceholderCommandParameter;
            return obj;
        }
        
        public static T ClearPlaceholderCommandParameter<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderCommandParameter = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderCommandParameter<T>(this T obj,
            System.Func<LazyValueBuilder<object>, LazyValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<object>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderCommandParameter = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderCommandParameter<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderEnabled<T>(this T obj,
            bool clearPlaceholderEnabled)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderEnabled = clearPlaceholderEnabled;
            return obj;
        }
        
        public static T ClearPlaceholderEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderEnabled = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderEnabled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderEnabled = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderHelpText<T>(this T obj,
            string clearPlaceholderHelpText)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderHelpText = clearPlaceholderHelpText;
            return obj;
        }
        
        public static T ClearPlaceholderHelpText<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderHelpText = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderHelpText<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderHelpText = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderHelpText<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderIcon<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource clearPlaceholderIcon)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderIcon = clearPlaceholderIcon;
            return obj;
        }
        
        public static T ClearPlaceholderIcon<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ImageSource>, ValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderIcon = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderIcon<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>, LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderIcon = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderIcon<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ImageSource>, BindingBuilder<Microsoft.Maui.Controls.ImageSource>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.ImageSource>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ClearPlaceholderName<T>(this T obj,
            string clearPlaceholderName)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ClearPlaceholderName = clearPlaceholderName;
            return obj;
        }
        
        public static T ClearPlaceholderName<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderName = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderName<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.ClearPlaceholderName = builder.GetValue();
            return obj;
        }
        
        public static T ClearPlaceholderName<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Windows.Input.ICommand command)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Command = command;
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Func<ValueBuilder<System.Windows.Input.ICommand>, ValueBuilder<System.Windows.Input.ICommand>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) obj.Command = builder.GetValue();
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Func<LazyValueBuilder<System.Windows.Input.ICommand>, LazyValueBuilder<System.Windows.Input.ICommand>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<System.Windows.Input.ICommand>());
            if (builder.ValueIsSet()) obj.Command = builder.GetValue();
            return obj;
        }
        
        public static T Command<T>(this T obj,
            System.Func<BindingBuilder<System.Windows.Input.ICommand>, BindingBuilder<System.Windows.Input.ICommand>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<System.Windows.Input.ICommand>(obj, Microsoft.Maui.Controls.SearchHandler.CommandProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            object commandParameter)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.CommandParameter = commandParameter;
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            System.Func<ValueBuilder<object>, ValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<object>());
            if (builder.ValueIsSet()) obj.CommandParameter = builder.GetValue();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            System.Func<LazyValueBuilder<object>, LazyValueBuilder<object>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<object>());
            if (builder.ValueIsSet()) obj.CommandParameter = builder.GetValue();
            return obj;
        }
        
        public static T CommandParameter<T>(this T obj,
            System.Func<BindingBuilder<object>, BindingBuilder<object>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<object>(obj, Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T DisplayMemberName<T>(this T obj,
            string displayMemberName)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.DisplayMemberName = displayMemberName;
            return obj;
        }
        
        public static T DisplayMemberName<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.DisplayMemberName = builder.GetValue();
            return obj;
        }
        
        public static T DisplayMemberName<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.DisplayMemberName = builder.GetValue();
            return obj;
        }
        
        public static T DisplayMemberName<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.DisplayMemberNameProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsSearchEnabled<T>(this T obj,
            bool isSearchEnabled)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.IsSearchEnabled = isSearchEnabled;
            return obj;
        }
        
        public static T IsSearchEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsSearchEnabled = builder.GetValue();
            return obj;
        }
        
        public static T IsSearchEnabled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsSearchEnabled = builder.GetValue();
            return obj;
        }
        
        public static T IsSearchEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Collections.IEnumerable itemsSource)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ItemsSource = itemsSource;
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<ValueBuilder<System.Collections.IEnumerable>, ValueBuilder<System.Collections.IEnumerable>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<System.Collections.IEnumerable>());
            if (builder.ValueIsSet()) obj.ItemsSource = builder.GetValue();
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<LazyValueBuilder<System.Collections.IEnumerable>, LazyValueBuilder<System.Collections.IEnumerable>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<System.Collections.IEnumerable>());
            if (builder.ValueIsSet()) obj.ItemsSource = builder.GetValue();
            return obj;
        }
        
        public static T ItemsSource<T>(this T obj,
            System.Func<BindingBuilder<System.Collections.IEnumerable>, BindingBuilder<System.Collections.IEnumerable>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<System.Collections.IEnumerable>(obj, Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            Microsoft.Maui.Controls.DataTemplate itemTemplate)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ItemTemplate = itemTemplate;
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.DataTemplate>, ValueBuilder<Microsoft.Maui.Controls.DataTemplate>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.DataTemplate>());
            if (builder.ValueIsSet()) obj.ItemTemplate = builder.GetValue();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.DataTemplate>, LazyValueBuilder<Microsoft.Maui.Controls.DataTemplate>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.DataTemplate>());
            if (builder.ValueIsSet()) obj.ItemTemplate = builder.GetValue();
            return obj;
        }
        
        public static T ItemTemplate<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.DataTemplate>, BindingBuilder<Microsoft.Maui.Controls.DataTemplate>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.DataTemplate>(obj, Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Query<T>(this T obj,
            string query)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Query = query;
            return obj;
        }
        
        public static T Query<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Query = builder.GetValue();
            return obj;
        }
        
        public static T Query<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Query = builder.GetValue();
            return obj;
        }
        
        public static T Query<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.QueryProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T QueryIcon<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource queryIcon)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.QueryIcon = queryIcon;
            return obj;
        }
        
        public static T QueryIcon<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ImageSource>, ValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.QueryIcon = builder.GetValue();
            return obj;
        }
        
        public static T QueryIcon<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>, LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.QueryIcon = builder.GetValue();
            return obj;
        }
        
        public static T QueryIcon<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ImageSource>, BindingBuilder<Microsoft.Maui.Controls.ImageSource>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.ImageSource>(obj, Microsoft.Maui.Controls.SearchHandler.QueryIconProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T QueryIconHelpText<T>(this T obj,
            string queryIconHelpText)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.QueryIconHelpText = queryIconHelpText;
            return obj;
        }
        
        public static T QueryIconHelpText<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.QueryIconHelpText = builder.GetValue();
            return obj;
        }
        
        public static T QueryIconHelpText<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.QueryIconHelpText = builder.GetValue();
            return obj;
        }
        
        public static T QueryIconHelpText<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T QueryIconName<T>(this T obj,
            string queryIconName)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.QueryIconName = queryIconName;
            return obj;
        }
        
        public static T QueryIconName<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.QueryIconName = builder.GetValue();
            return obj;
        }
        
        public static T QueryIconName<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.QueryIconName = builder.GetValue();
            return obj;
        }
        
        public static T QueryIconName<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T SearchBoxVisibility<T>(this T obj,
            Microsoft.Maui.Controls.SearchBoxVisibility searchBoxVisibility)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.SearchBoxVisibility = searchBoxVisibility;
            return obj;
        }
        
        public static T SearchBoxVisibility<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>, ValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>());
            if (builder.ValueIsSet()) obj.SearchBoxVisibility = builder.GetValue();
            return obj;
        }
        
        public static T SearchBoxVisibility<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>, LazyValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>());
            if (builder.ValueIsSet()) obj.SearchBoxVisibility = builder.GetValue();
            return obj;
        }
        
        public static T SearchBoxVisibility<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>, BindingBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.SearchBoxVisibility>(obj, Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ShowsResults<T>(this T obj,
            bool showsResults)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.ShowsResults = showsResults;
            return obj;
        }
        
        public static T ShowsResults<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ShowsResults = builder.GetValue();
            return obj;
        }
        
        public static T ShowsResults<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ShowsResults = builder.GetValue();
            return obj;
        }
        
        public static T ShowsResults<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnFocused<T>(this T obj, System.EventHandler<System.EventArgs> handler)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Focused += handler;
            return obj;
        }
        
        public static T OnFocused<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Focused += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnUnfocused<T>(this T obj, System.EventHandler<System.EventArgs> handler)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Unfocused += handler;
            return obj;
        }
        
        public static T OnUnfocused<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.Unfocused += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnFocusChangeRequested<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.VisualElement.FocusRequestArgs> handler)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FocusChangeRequested += handler;
            return obj;
        }
        
        public static T OnFocusChangeRequested<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SearchHandler
        {
            obj.FocusChangeRequested += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class SwipeViewGeneratedExtension
    {
        public static T Threshold<T>(this T obj,
            double threshold)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.Threshold = threshold;
            return obj;
        }
        
        public static T Threshold<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.Threshold = builder.GetValue();
            return obj;
        }
        
        public static T Threshold<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.Threshold = builder.GetValue();
            return obj;
        }
        
        public static T Threshold<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.SwipeView.ThresholdProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T LeftItems<T>(this T obj,
            Microsoft.Maui.Controls.SwipeItems leftItems)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.LeftItems = leftItems;
            return obj;
        }
        
        public static T LeftItems<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.SwipeItems>, ValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.LeftItems = builder.GetValue();
            return obj;
        }
        
        public static T LeftItems<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>, LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.LeftItems = builder.GetValue();
            return obj;
        }
        
        public static T LeftItems<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.SwipeItems>, BindingBuilder<Microsoft.Maui.Controls.SwipeItems>> buidBinding)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.SwipeItems>(obj, Microsoft.Maui.Controls.SwipeView.LeftItemsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T RightItems<T>(this T obj,
            Microsoft.Maui.Controls.SwipeItems rightItems)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.RightItems = rightItems;
            return obj;
        }
        
        public static T RightItems<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.SwipeItems>, ValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.RightItems = builder.GetValue();
            return obj;
        }
        
        public static T RightItems<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>, LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.RightItems = builder.GetValue();
            return obj;
        }
        
        public static T RightItems<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.SwipeItems>, BindingBuilder<Microsoft.Maui.Controls.SwipeItems>> buidBinding)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.SwipeItems>(obj, Microsoft.Maui.Controls.SwipeView.RightItemsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TopItems<T>(this T obj,
            Microsoft.Maui.Controls.SwipeItems topItems)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.TopItems = topItems;
            return obj;
        }
        
        public static T TopItems<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.SwipeItems>, ValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.TopItems = builder.GetValue();
            return obj;
        }
        
        public static T TopItems<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>, LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.TopItems = builder.GetValue();
            return obj;
        }
        
        public static T TopItems<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.SwipeItems>, BindingBuilder<Microsoft.Maui.Controls.SwipeItems>> buidBinding)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.SwipeItems>(obj, Microsoft.Maui.Controls.SwipeView.TopItemsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T BottomItems<T>(this T obj,
            Microsoft.Maui.Controls.SwipeItems bottomItems)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.BottomItems = bottomItems;
            return obj;
        }
        
        public static T BottomItems<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.SwipeItems>, ValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.BottomItems = builder.GetValue();
            return obj;
        }
        
        public static T BottomItems<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>, LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>> buidValue)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.SwipeItems>());
            if (builder.ValueIsSet()) obj.BottomItems = builder.GetValue();
            return obj;
        }
        
        public static T BottomItems<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.SwipeItems>, BindingBuilder<Microsoft.Maui.Controls.SwipeItems>> buidBinding)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.SwipeItems>(obj, Microsoft.Maui.Controls.SwipeView.BottomItemsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnSwipeStarted<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.SwipeStartedEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeStarted += handler;
            return obj;
        }
        
        public static T OnSwipeStarted<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeStarted += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnSwipeChanging<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.SwipeChangingEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeChanging += handler;
            return obj;
        }
        
        public static T OnSwipeChanging<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeChanging += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnSwipeEnded<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.SwipeEndedEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeEnded += handler;
            return obj;
        }
        
        public static T OnSwipeEnded<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.SwipeEnded += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnOpenRequested<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.OpenRequestedEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.OpenRequested += handler;
            return obj;
        }
        
        public static T OnOpenRequested<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.OpenRequested += (o, arg) => action(obj);
            return obj;
        }
        
        public static T OnCloseRequested<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.CloseRequestedEventArgs> handler)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.CloseRequested += handler;
            return obj;
        }
        
        public static T OnCloseRequested<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.SwipeView
        {
            obj.CloseRequested += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

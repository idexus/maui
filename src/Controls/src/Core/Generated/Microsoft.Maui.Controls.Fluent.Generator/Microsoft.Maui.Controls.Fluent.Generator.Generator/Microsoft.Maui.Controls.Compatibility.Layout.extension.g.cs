//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls.Compatibility
{
	using Microsoft.Maui.Controls.Fluent;

    public static class LayoutGeneratedExtension
    {
        public static T IsClippedToBounds<T>(this T obj,
            bool isClippedToBounds)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            obj.IsClippedToBounds = isClippedToBounds;
            return obj;
        }
        
        public static T IsClippedToBounds<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsClippedToBounds = builder.GetValue();
            return obj;
        }
        
        public static T IsClippedToBounds<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsClippedToBounds = builder.GetValue();
            return obj;
        }
        
        public static T IsClippedToBounds<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Compatibility.Layout.IsClippedToBoundsProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            Microsoft.Maui.Thickness padding)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            obj.Padding = padding;
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Thickness>, ValueBuilder<Microsoft.Maui.Thickness>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Thickness>());
            if (builder.ValueIsSet()) obj.Padding = builder.GetValue();
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Thickness>, LazyValueBuilder<Microsoft.Maui.Thickness>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Thickness>());
            if (builder.ValueIsSet()) obj.Padding = builder.GetValue();
            return obj;
        }
        
        public static T Padding<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Thickness>, BindingBuilder<Microsoft.Maui.Thickness>> buidBinding)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Thickness>(obj, Microsoft.Maui.Controls.Compatibility.Layout.PaddingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CascadeInputTransparent<T>(this T obj,
            bool cascadeInputTransparent)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            obj.CascadeInputTransparent = cascadeInputTransparent;
            return obj;
        }
        
        public static T CascadeInputTransparent<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.CascadeInputTransparent = builder.GetValue();
            return obj;
        }
        
        public static T CascadeInputTransparent<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.CascadeInputTransparent = builder.GetValue();
            return obj;
        }
        
        public static T CascadeInputTransparent<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Compatibility.Layout.CascadeInputTransparentProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnLayoutChanged<T>(this T obj, System.EventHandler handler)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            obj.LayoutChanged += handler;
            return obj;
        }
        
        public static T OnLayoutChanged<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.Compatibility.Layout
        {
            obj.LayoutChanged += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

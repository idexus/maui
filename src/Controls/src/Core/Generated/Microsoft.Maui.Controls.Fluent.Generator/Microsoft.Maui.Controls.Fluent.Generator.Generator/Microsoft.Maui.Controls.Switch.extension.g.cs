//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class SwitchGeneratedExtension
    {
        public static T OnColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color onColor)
            where T : Microsoft.Maui.Controls.Switch
        {
            obj.OnColor = onColor;
            return obj;
        }
        
        public static T OnColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.OnColor = builder.GetValue();
            return obj;
        }
        
        public static T OnColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.OnColor = builder.GetValue();
            return obj;
        }
        
        public static T OnColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.Switch.OnColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T ThumbColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color thumbColor)
            where T : Microsoft.Maui.Controls.Switch
        {
            obj.ThumbColor = thumbColor;
            return obj;
        }
        
        public static T ThumbColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.ThumbColor = builder.GetValue();
            return obj;
        }
        
        public static T ThumbColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.ThumbColor = builder.GetValue();
            return obj;
        }
        
        public static T ThumbColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.Switch.ThumbColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsToggled<T>(this T obj,
            bool isToggled)
            where T : Microsoft.Maui.Controls.Switch
        {
            obj.IsToggled = isToggled;
            return obj;
        }
        
        public static T IsToggled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsToggled = builder.GetValue();
            return obj;
        }
        
        public static T IsToggled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsToggled = builder.GetValue();
            return obj;
        }
        
        public static T IsToggled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Switch
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Switch.IsToggledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnToggled<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.ToggledEventArgs> handler)
            where T : Microsoft.Maui.Controls.Switch
        {
            obj.Toggled += handler;
            return obj;
        }
        
        public static T OnToggled<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.Switch
        {
            obj.Toggled += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

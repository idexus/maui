//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class StyleGeneratedExtension
    {
        public static Microsoft.Maui.Controls.Style ApplyToDerivedTypes(this Microsoft.Maui.Controls.Style obj,
            bool applyToDerivedTypes)
        {
            obj.ApplyToDerivedTypes = applyToDerivedTypes;
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style ApplyToDerivedTypes(this Microsoft.Maui.Controls.Style obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ApplyToDerivedTypes = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style ApplyToDerivedTypes(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.ApplyToDerivedTypes = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BasedOn(this Microsoft.Maui.Controls.Style obj,
            Microsoft.Maui.Controls.Style basedOn)
        {
            obj.BasedOn = basedOn;
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BasedOn(this Microsoft.Maui.Controls.Style obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.Style>, ValueBuilder<Microsoft.Maui.Controls.Style>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.Style>());
            if (builder.ValueIsSet()) obj.BasedOn = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BasedOn(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.Style>, LazyValueBuilder<Microsoft.Maui.Controls.Style>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.Style>());
            if (builder.ValueIsSet()) obj.BasedOn = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BaseResourceKey(this Microsoft.Maui.Controls.Style obj,
            string baseResourceKey)
        {
            obj.BaseResourceKey = baseResourceKey;
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BaseResourceKey(this Microsoft.Maui.Controls.Style obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.BaseResourceKey = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style BaseResourceKey(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.BaseResourceKey = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Behaviors(this Microsoft.Maui.Controls.Style obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior> behaviors)
        {
            foreach (var item in behaviors)
                obj.Behaviors.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Behaviors(this Microsoft.Maui.Controls.Style obj,
            params Microsoft.Maui.Controls.Behavior[] behaviors)
        {
            foreach (var item in behaviors)
                obj.Behaviors.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Behaviors(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior>>, LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior>>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior>>());
            if (builder.ValueIsSet())
            {
                var items = builder.GetValue();
                foreach (var item in items) 
                    obj.Behaviors.Add(item);
            }
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style CanCascade(this Microsoft.Maui.Controls.Style obj,
            bool canCascade)
        {
            obj.CanCascade = canCascade;
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style CanCascade(this Microsoft.Maui.Controls.Style obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.CanCascade = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style CanCascade(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.CanCascade = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Class(this Microsoft.Maui.Controls.Style obj,
            string @class)
        {
            obj.Class = @class;
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Class(this Microsoft.Maui.Controls.Style obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Class = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Class(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Class = builder.GetValue();
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Setters(this Microsoft.Maui.Controls.Style obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter> setters)
        {
            foreach (var item in setters)
                obj.Setters.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Setters(this Microsoft.Maui.Controls.Style obj,
            params Microsoft.Maui.Controls.Setter[] setters)
        {
            foreach (var item in setters)
                obj.Setters.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Setters(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>>, LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>>());
            if (builder.ValueIsSet())
            {
                var items = builder.GetValue();
                foreach (var item in items) 
                    obj.Setters.Add(item);
            }
            return obj;
        }
        
        public static Microsoft.Maui.Controls.Style Triggers(this Microsoft.Maui.Controls.Style obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase> triggers)
        {
            foreach (var item in triggers)
                obj.Triggers.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Triggers(this Microsoft.Maui.Controls.Style obj,
            params Microsoft.Maui.Controls.TriggerBase[] triggers)
        {
            foreach (var item in triggers)
                obj.Triggers.Add(item);
            return obj;
        }

        public static Microsoft.Maui.Controls.Style Triggers(this Microsoft.Maui.Controls.Style obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase>>, LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase>>> buidValue)
        {
            var builder = buidValue(new LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase>>());
            if (builder.ValueIsSet())
            {
                var items = builder.GetValue();
                foreach (var item in items) 
                    obj.Triggers.Add(item);
            }
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class DatePickerGeneratedExtension
    {
        public static T Date<T>(this T obj,
            System.DateTime date)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.Date = date;
            return obj;
        }
        
        public static T Date<T>(this T obj,
            System.Func<ValueBuilder<System.DateTime>, ValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.Date = builder.GetValue();
            return obj;
        }
        
        public static T Date<T>(this T obj,
            System.Func<LazyValueBuilder<System.DateTime>, LazyValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.Date = builder.GetValue();
            return obj;
        }
        
        public static T Date<T>(this T obj,
            System.Func<BindingBuilder<System.DateTime>, BindingBuilder<System.DateTime>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<System.DateTime>(obj, Microsoft.Maui.Controls.DatePicker.DateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Format<T>(this T obj,
            string format)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.Format = format;
            return obj;
        }
        
        public static T Format<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Format = builder.GetValue();
            return obj;
        }
        
        public static T Format<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.Format = builder.GetValue();
            return obj;
        }
        
        public static T Format<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.DatePicker.FormatProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T MaximumDate<T>(this T obj,
            System.DateTime maximumDate)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.MaximumDate = maximumDate;
            return obj;
        }
        
        public static T MaximumDate<T>(this T obj,
            System.Func<ValueBuilder<System.DateTime>, ValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.MaximumDate = builder.GetValue();
            return obj;
        }
        
        public static T MaximumDate<T>(this T obj,
            System.Func<LazyValueBuilder<System.DateTime>, LazyValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.MaximumDate = builder.GetValue();
            return obj;
        }
        
        public static T MaximumDate<T>(this T obj,
            System.Func<BindingBuilder<System.DateTime>, BindingBuilder<System.DateTime>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<System.DateTime>(obj, Microsoft.Maui.Controls.DatePicker.MaximumDateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T MinimumDate<T>(this T obj,
            System.DateTime minimumDate)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.MinimumDate = minimumDate;
            return obj;
        }
        
        public static T MinimumDate<T>(this T obj,
            System.Func<ValueBuilder<System.DateTime>, ValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.MinimumDate = builder.GetValue();
            return obj;
        }
        
        public static T MinimumDate<T>(this T obj,
            System.Func<LazyValueBuilder<System.DateTime>, LazyValueBuilder<System.DateTime>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<System.DateTime>());
            if (builder.ValueIsSet()) obj.MinimumDate = builder.GetValue();
            return obj;
        }
        
        public static T MinimumDate<T>(this T obj,
            System.Func<BindingBuilder<System.DateTime>, BindingBuilder<System.DateTime>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<System.DateTime>(obj, Microsoft.Maui.Controls.DatePicker.MinimumDateProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            Microsoft.Maui.Graphics.Color textColor)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.TextColor = textColor;
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.TextColor = builder.GetValue();
            return obj;
        }
        
        public static T TextColor<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.DatePicker.TextColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            double characterSpacing)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.CharacterSpacing = characterSpacing;
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.CharacterSpacing = builder.GetValue();
            return obj;
        }
        
        public static T CharacterSpacing<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.DatePicker.CharacterSpacingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            Microsoft.Maui.Controls.FontAttributes fontAttributes)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.FontAttributes = fontAttributes;
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.FontAttributes>, ValueBuilder<Microsoft.Maui.Controls.FontAttributes>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.FontAttributes>());
            if (builder.ValueIsSet()) obj.FontAttributes = builder.GetValue();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>, LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.FontAttributes>());
            if (builder.ValueIsSet()) obj.FontAttributes = builder.GetValue();
            return obj;
        }
        
        public static T FontAttributes<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.FontAttributes>, BindingBuilder<Microsoft.Maui.Controls.FontAttributes>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.FontAttributes>(obj, Microsoft.Maui.Controls.DatePicker.FontAttributesProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            string fontFamily)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.FontFamily = fontFamily;
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<ValueBuilder<string>, ValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<string>());
            if (builder.ValueIsSet()) obj.FontFamily = builder.GetValue();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<LazyValueBuilder<string>, LazyValueBuilder<string>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<string>());
            if (builder.ValueIsSet()) obj.FontFamily = builder.GetValue();
            return obj;
        }
        
        public static T FontFamily<T>(this T obj,
            System.Func<BindingBuilder<string>, BindingBuilder<string>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<string>(obj, Microsoft.Maui.Controls.DatePicker.FontFamilyProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            double fontSize)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.FontSize = fontSize;
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<ValueBuilder<double>, ValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<double>());
            if (builder.ValueIsSet()) obj.FontSize = builder.GetValue();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<LazyValueBuilder<double>, LazyValueBuilder<double>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<double>());
            if (builder.ValueIsSet()) obj.FontSize = builder.GetValue();
            return obj;
        }
        
        public static T FontSize<T>(this T obj,
            System.Func<BindingBuilder<double>, BindingBuilder<double>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<double>(obj, Microsoft.Maui.Controls.DatePicker.FontSizeProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            bool fontAutoScalingEnabled)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.FontAutoScalingEnabled = fontAutoScalingEnabled;
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.FontAutoScalingEnabled = builder.GetValue();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.FontAutoScalingEnabled = builder.GetValue();
            return obj;
        }
        
        public static T FontAutoScalingEnabled<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.DatePicker.FontAutoScalingEnabledProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T OnDateSelected<T>(this T obj, System.EventHandler<Microsoft.Maui.Controls.DateChangedEventArgs> handler)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.DateSelected += handler;
            return obj;
        }
        
        public static T OnDateSelected<T>(this T obj, System.Action<T> action)
            where T : Microsoft.Maui.Controls.DatePicker
        {
            obj.DateSelected += (o, arg) => action(obj);
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

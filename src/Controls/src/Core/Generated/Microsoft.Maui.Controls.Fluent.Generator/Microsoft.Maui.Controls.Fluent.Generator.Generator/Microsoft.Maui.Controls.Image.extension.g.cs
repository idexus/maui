//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class ImageGeneratedExtension
    {
        public static T Aspect<T>(this T obj,
            Microsoft.Maui.Aspect aspect)
            where T : Microsoft.Maui.Controls.Image
        {
            obj.Aspect = aspect;
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Aspect>, ValueBuilder<Microsoft.Maui.Aspect>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Aspect>());
            if (builder.ValueIsSet()) obj.Aspect = builder.GetValue();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Aspect>, LazyValueBuilder<Microsoft.Maui.Aspect>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Aspect>());
            if (builder.ValueIsSet()) obj.Aspect = builder.GetValue();
            return obj;
        }
        
        public static T Aspect<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Aspect>, BindingBuilder<Microsoft.Maui.Aspect>> buidBinding)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Aspect>(obj, Microsoft.Maui.Controls.Image.AspectProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            bool isOpaque)
            where T : Microsoft.Maui.Controls.Image
        {
            obj.IsOpaque = isOpaque;
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsOpaque = builder.GetValue();
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsOpaque = builder.GetValue();
            return obj;
        }
        
        public static T IsOpaque<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Image.IsOpaqueProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            bool isAnimationPlaying)
            where T : Microsoft.Maui.Controls.Image
        {
            obj.IsAnimationPlaying = isAnimationPlaying;
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsAnimationPlaying = builder.GetValue();
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsAnimationPlaying = builder.GetValue();
            return obj;
        }
        
        public static T IsAnimationPlaying<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.Image.IsAnimationPlayingProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            Microsoft.Maui.Controls.ImageSource source)
            where T : Microsoft.Maui.Controls.Image
        {
            obj.Source = source;
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Controls.ImageSource>, ValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.Source = builder.GetValue();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>, LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>> buidValue)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Controls.ImageSource>());
            if (builder.ValueIsSet()) obj.Source = builder.GetValue();
            return obj;
        }
        
        public static T Source<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Controls.ImageSource>, BindingBuilder<Microsoft.Maui.Controls.ImageSource>> buidBinding)
            where T : Microsoft.Maui.Controls.Image
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Controls.ImageSource>(obj, Microsoft.Maui.Controls.Image.SourceProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

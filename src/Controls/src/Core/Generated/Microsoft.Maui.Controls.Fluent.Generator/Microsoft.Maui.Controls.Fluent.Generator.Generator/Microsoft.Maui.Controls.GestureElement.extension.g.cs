//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class GestureElementGeneratedExtension
    {
        public static T GestureRecognizers<T>(this T obj,
            System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer> gestureRecognizers)
            where T : Microsoft.Maui.Controls.GestureElement
        {
            foreach (var item in gestureRecognizers)
                obj.GestureRecognizers.Add(item);
            return obj;
        }

        public static T GestureRecognizers<T>(this T obj,
            params Microsoft.Maui.Controls.IGestureRecognizer[] gestureRecognizers)
            where T : Microsoft.Maui.Controls.GestureElement
        {
            foreach (var item in gestureRecognizers)
                obj.GestureRecognizers.Add(item);
            return obj;
        }

        public static T GestureRecognizers<T>(this T obj,
            System.Func<LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>>, LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>>> buidValue)
            where T : Microsoft.Maui.Controls.GestureElement
        {
            var builder = buidValue(new LazyValueBuilder<System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>>());
            if (builder.ValueIsSet())
            {
                var items = builder.GetValue();
                foreach (var item in items) 
                    obj.GestureRecognizers.Add(item);
            }
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore

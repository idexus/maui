//
// <auto-generated>
//

#nullable enable
#pragma warning disable CS8601


namespace Microsoft.Maui.Controls
{
	using Microsoft.Maui.Controls.Fluent;

    public static class ActivityIndicatorGeneratedExtension
    {
        public static T Color<T>(this T obj,
            Microsoft.Maui.Graphics.Color color)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            obj.Color = color;
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<ValueBuilder<Microsoft.Maui.Graphics.Color>, ValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidValue(new ValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.Color = builder.GetValue();
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<LazyValueBuilder<Microsoft.Maui.Graphics.Color>, LazyValueBuilder<Microsoft.Maui.Graphics.Color>> buidValue)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidValue(new LazyValueBuilder<Microsoft.Maui.Graphics.Color>());
            if (builder.ValueIsSet()) obj.Color = builder.GetValue();
            return obj;
        }
        
        public static T Color<T>(this T obj,
            System.Func<BindingBuilder<Microsoft.Maui.Graphics.Color>, BindingBuilder<Microsoft.Maui.Graphics.Color>> buidBinding)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidBinding(new BindingBuilder<Microsoft.Maui.Graphics.Color>(obj, Microsoft.Maui.Controls.ActivityIndicator.ColorProperty));
            builder.BindProperty();
            return obj;
        }
        
        public static T IsRunning<T>(this T obj,
            bool isRunning)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            obj.IsRunning = isRunning;
            return obj;
        }
        
        public static T IsRunning<T>(this T obj,
            System.Func<ValueBuilder<bool>, ValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidValue(new ValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsRunning = builder.GetValue();
            return obj;
        }
        
        public static T IsRunning<T>(this T obj,
            System.Func<LazyValueBuilder<bool>, LazyValueBuilder<bool>> buidValue)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidValue(new LazyValueBuilder<bool>());
            if (builder.ValueIsSet()) obj.IsRunning = builder.GetValue();
            return obj;
        }
        
        public static T IsRunning<T>(this T obj,
            System.Func<BindingBuilder<bool>, BindingBuilder<bool>> buidBinding)
            where T : Microsoft.Maui.Controls.ActivityIndicator
        {
            var builder = buidBinding(new BindingBuilder<bool>(obj, Microsoft.Maui.Controls.ActivityIndicator.IsRunningProperty));
            builder.BindProperty();
            return obj;
        }
        
    }
}

#pragma warning restore CS8601
#nullable restore
